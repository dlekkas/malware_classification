import pandas as pd
import numpy as np
import sys
import os

sys.path.insert(0, '../helpers')
from util import save_obj, load_config 

# load system configuration (i.e directory structure)
conf = load_config('../../config.yml')

# Collects all the feature sets represented as CSV files and located in the
# directory path supplied as argument. Returns a list of pandas DataFrames
# where each element represents a feature set in DataFrame format
def collect_feature_sets(features_dir):
    directory = os.fsencode(features_dir)
    featsets_d = {}
    for csv_file in os.listdir(directory):
        filename = os.fsdecode(csv_file)
        if filename.endswith(".csv"):
            # FIXME: replace the .iloc() invocation when fixed
            # it was added to sloppily patch shoddy to_csv()
            # invocations while extracting features
            featset = pd.read_csv(features_dir + filename).iloc[:,1:]
            # correlate each feature-set name with its pandas DataFrame
            featsets_d[os.path.splitext(filename)[0]] = featset                                                     
    return featsets_d


def construct_final_dataset(features_dir):
    featsets_d = collect_feature_sets(features_dir)
    labels = pd.read_csv(conf['train_labels'])
    dataset_df = pd.concat([labels] + list(featsets_d.values()), axis=1, sort=False)
    save_obj(dataset_df, 'final_data')
    return dataset_df


data = construct_final_dataset(conf['featsets_dir'])
y = data['Class']
X = data.drop(['Class', 'Id'], axis=1)

